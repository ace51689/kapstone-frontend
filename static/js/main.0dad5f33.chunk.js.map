{"version":3,"sources":["components/Navigation.js","views/Home.js","assets/Unknown-Poster.jpg","components/MovieItem.js","components/TelevisionItem.js","fetch requests/tmdbRequests.js","store/store.js","views/EntertainmentList.js","assets/Unknown-Actor.png","views/MoviePage.js","views/TelevisionPage.js","components/PaginationComponent.js","components/MultiSearch.js","views/SearchPage.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Nav","className","activeKey","Item","to","Button","variant","Home","props","MovieItem","Card","Header","id","poster_path","Img","style","width","varient","src","unknownPoster","Body","Title","title","Text","release_date","vote_average","overview","TelevisionItem","name","first_air_date","base_URL","APIKey","enUS","pageParam","multiSearch","query","page","fetch","method","headers","then","res","json","SET_MEDIUM","SET_SORT_BY","SET_PAGE","SET_SEARCH","SET_SEARCH_QUERY","SET_SEARCH_PAGE","SET_ACTIVE_PAGE","useStore","create","devtools","redux","state","action","type","medium","payload","sortBy","search","searchQuery","searchPage","activePage","EntertainmentList","useState","entertainment","setState","dispatch","useEffect","sortType","getEntertainment","results","ButtonToolbar","ButtonGroup","size","onClick","e","map","item","key","MoviePage","movie","setMovie","crew","setCrew","cast","setCast","streaming","undefined","rent","buy","none","watchProviders","setWatchProviders","baseUrl","movieId","match","params","getMovieProviders","console","log","US","stream","flatrate","getMovieCredits","tagline","provider","provider_name","provider_id","job","alt","original_title","profile_path","character","unknownUser","TelevisionPage","television","setTelevision","tvId","getTelevisionProviders","getTelevisionCredits","some","member","display","PaginationComponent","items","setItems","pagArray","Pagination","Prev","pageType","apiCall","setType","number","push","active","handleChangePage","pages","Next","MultiSearch","totalPages","total_pages","setQuery","Form","onSubmit","preventDefault","trim","alert","Control","onChange","target","value","placeholder","media_type","SearchPage","App","exact","path","component","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dad5f33.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Navigation.css\"\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav, Button } from \"react-bootstrap\"\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Nav className=\"justify-content-between\" activeKey=\"/home\">\r\n        \r\n        &nbsp;\r\n        Kenzie Entertainment DB\r\n      \r\n        <Nav.Item>\r\n          <Link to=\"/\">Home</Link> &nbsp;\r\n      </Nav.Item>\r\n        <Nav.Item>\r\n          <Link to=\"/browse\">Browse</Link> &nbsp;\r\n      </Nav.Item>\r\n        <Nav.Item>\r\n          <Link to=\"/search\">Search</Link> &nbsp;\r\n      </Nav.Item>\r\n        <Nav.Item>\r\n          <Button variant=\"link\">\r\n            Logout\r\n      </Button> &nbsp;\r\n      </Nav.Item>\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport Navigation from \"../components/Navigation\"\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <> \r\n    <Navigation />\r\n      <h1>Welcome Back! Lets get started</h1>\r\n    \r\n      <div>\r\n        \r\n        <h2>Your Favorites</h2>\r\n        \r\n        </div>\r\n        <div> \r\n          \r\n          <h2>Movie Ratings</h2>\r\n          \r\n          \r\n        \r\n        </div>\r\n        <div>\r\n          \r\n          <h2>Reviews</h2>\r\n        \r\n        </div>\r\n      \r\n    </>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/Unknown-Poster.3ffa46d3.jpg\";","import React from 'react'\r\nimport { Card } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport './ListItem.css'\r\nimport unknownPoster from \"../assets/Unknown-Poster.jpg\"\r\n\r\nconst MovieItem = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <Card>\r\n          <Card.Header>\r\n            <Link to={\"/movie/\" + props.id}>\r\n              {\r\n                props.poster_path !== null ?\r\n                  <Card.Img style={{ width: \"90px\" }} varient=\"top\" src={\"https://image.tmdb.org/t/p/original\" + props.poster_path} />\r\n                  : <Card.Img style={{ width: \"90px\" }} varient=\"top\" src={unknownPoster} />\r\n              }\r\n            </Link>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              <Link to={\"/movie/\" + props.id}>{props.title}</Link>\r\n            </Card.Title>\r\n            <Card.Text>\r\n              Released: {props.release_date}\r\n            &nbsp;\r\n            Average Rating: {props.vote_average}\r\n            </Card.Text>\r\n            <Card.Text>\r\n              {props.overview}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </li>\r\n      <br />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieItem","import React from 'react'\r\nimport { Card } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./ListItem.css\"\r\nimport unknownPoster from \"../assets/Unknown-Poster.jpg\"\r\n\r\nconst TelevisionItem = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <Card>\r\n          <Card.Header>\r\n            <Link to={\"/tv/\" + props.id}>\r\n              {\r\n                props.poster_path !== null ?\r\n                  <Card.Img style={{ width: \"90px\" }} varient=\"top\" src={\"https://image.tmdb.org/t/p/original\" + props.poster_path} />\r\n                  : <Card.Img style={{ width: \"90px\" }} varient=\"top\" src={unknownPoster} />\r\n              }\r\n            </Link>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Link to={\"/tv/\" + props.id}>\r\n              <Card.Title>{props.name}</Card.Title>\r\n            </Link>\r\n            <Card.Text>\r\n              Released: {props.first_air_date}\r\n            &nbsp;\r\n            Average Rating: {props.vote_average}\r\n            </Card.Text>\r\n            <Card.Text>\r\n              {props.overview}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        <br />\r\n      </li>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TelevisionItem\r\n","const base_URL = \"https://api.themoviedb.org/3/\"\r\nconst APIKey = \"?api_key=6788151fd970b8ef2326538cd7e0ad87\"\r\nconst enUS = \"&language=en-US\"\r\nconst queryParam = \"&query=\"\r\nconst pageParam = \"&page=\"\r\nconst includeAdult = \"&include_adult=false\"\r\n\r\nexport const getEntertainment = (medium, sortType, page) => {\r\n  return fetch(base_URL + medium + \"/\" + sortType + APIKey + enUS + pageParam + page, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const multiSearch = (query, page) => {\r\n  return fetch(base_URL + \"search/multi\" + APIKey + enUS + queryParam + query + pageParam + page + includeAdult, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n}\r\n\r\nexport const getMovie = (movieId) => {\r\n  return fetch(base_URL + \"movie/\" + movieId + APIKey + enUS, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMovieCredits = (movieId) => {\r\n  return fetch(base_URL + \"movie/\" + movieId + \"/credits\" + APIKey + enUS, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getTelevision = (tvId) => {\r\n  return fetch(base_URL + \"tv/\" + tvId + APIKey + enUS, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getTelevisionCredits = (tvId) => {\r\n  return fetch(base_URL + \"tv/\" + tvId + \"/credits\" + APIKey + enUS, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMovieProviders = (movieId) => {\r\n  return fetch(base_URL + \"movie/\" + movieId + \"/watch/providers\" + APIKey + enUS, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getTelevisionProviders = (tvId) => {\r\n  return fetch(base_URL + \"tv/\" + tvId + \"/watch/providers\" + APIKey + enUS, {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  }).then((res) => res.json());\r\n};","import create from 'zustand'\r\nimport { devtools, redux } from \"zustand/middleware\"\r\n\r\nconst initialState = { medium: \"movie\", sortBy: \"popular\", page: 1, search: {}, searchQuery: \"\", searchPage: 1, activePage: 1 }\r\n\r\nexport const SET_MEDIUM = \"SETMEDIUM\"\r\nexport const SET_SORT_BY = \"SETSORTBY\"\r\nexport const SET_PAGE = \"SETPAGE\"\r\nexport const SET_SEARCH = \"SETSEARCH\"\r\nexport const SET_SEARCH_QUERY = \"SETSEARCHQUERY\"\r\nexport const SET_SEARCH_PAGE = \"SETSEARCHPAGE\"\r\nexport const SET_ACTIVE_PAGE = \"SETACTIVEPAGE\"\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_MEDIUM:\r\n      return { medium: action.payload }\r\n    case SET_SORT_BY:\r\n      return { sortBy: action.payload }\r\n    case SET_PAGE:\r\n      return { page: action.payload }\r\n    case SET_SEARCH:\r\n      return { search: action.payload }\r\n    case SET_SEARCH_QUERY:\r\n      return { searchQuery: action.payload }\r\n    case SET_SEARCH_PAGE:\r\n      return { searchPage: action.payload }\r\n    case SET_ACTIVE_PAGE:\r\n      return { activePage: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const useStore = create(devtools(redux(reducer, initialState)))","import React, { useEffect, useState } from 'react'\r\nimport MovieItem from '../components/MovieItem'\r\nimport TelevisionItem from \"../components/TelevisionItem\"\r\nimport Navigation from \"../components/Navigation\"\r\nimport { getEntertainment } from \"../fetch requests/tmdbRequests\"\r\nimport { useStore, SET_MEDIUM, SET_SORT_BY, SET_PAGE } from \"../store/store\"\r\nimport { Button, ButtonGroup, ButtonToolbar } from \"react-bootstrap\"\r\nimport \"./views.css\"\r\n\r\nconst EntertainmentList = (props) => {\r\n  const [state, setState] = useState({ entertainment: [] })\r\n  const dispatch = useStore((state) => state.dispatch)\r\n  const medium = useStore((state) => state.medium)\r\n  const sortBy = useStore((state) => state.sortBy)\r\n  const page = useStore((state) => state.page)\r\n\r\n  useEffect(() => {\r\n    getEntertainment(medium, sortBy, page)\r\n      .then((res) => setState({\r\n        entertainment: res.results\r\n      }))\r\n  }, [medium, sortBy, page])\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className=\"sort-and-nav\">\r\n\r\n        <ButtonToolbar>\r\n\r\n          <ButtonGroup size=\"sm\">\r\n\r\n            <Button className=\"mr-1\" onClick={(e) => {\r\n              dispatch({ type: SET_MEDIUM, payload: \"movie\" })\r\n              dispatch({ type: SET_SORT_BY, payload: \"popular\" })\r\n              dispatch({ type: SET_PAGE, payload: 1 })\r\n            }}>Movies</Button>\r\n\r\n            <Button className=\"mr-3\" onClick={(e) => {\r\n              dispatch({ type: SET_MEDIUM, payload: \"tv\" })\r\n              dispatch({ type: SET_SORT_BY, payload: \"popular\" })\r\n              dispatch({ type: SET_PAGE, payload: 1 })\r\n            }}>Televison</Button>\r\n          </ButtonGroup>\r\n\r\n          <ButtonGroup size=\"sm\">\r\n\r\n            <Button className=\"mr-1\" onClick={(e) => {\r\n              dispatch({ type: SET_SORT_BY, payload: \"popular\" })\r\n              dispatch({ type: SET_PAGE, payload: 1 })\r\n            }}>Popular</Button>\r\n\r\n            <Button className=\"mr-1\" onClick={(e) => {\r\n              dispatch({ type: SET_SORT_BY, payload: \"top_rated\" })\r\n              dispatch({ type: SET_PAGE, payload: 1 })\r\n            }}>Top Rated</Button>\r\n\r\n            {\r\n              medium === \"movie\" ?\r\n                <Button className=\"mr-1\" onClick={(e) => {\r\n                  dispatch({ type: SET_SORT_BY, payload: \"now_playing\" })\r\n                  dispatch({ type: SET_PAGE, payload: 1 })\r\n                }}>Now Playing</Button>\r\n                :\r\n                <Button className=\"mr-1\" onClick={(e) => {\r\n                  dispatch({ type: SET_SORT_BY, payload: \"airing_today\" })\r\n                  dispatch({ type: SET_PAGE, payload: 1 })\r\n                }}>Airing Today</Button>\r\n            }\r\n\r\n            {\r\n              medium === \"movie\" ?\r\n                <Button className=\"mr-3\" onClick={(e) => {\r\n                  dispatch({ type: SET_SORT_BY, payload: \"upcoming\" })\r\n                  dispatch({ type: SET_PAGE, payload: 1 })\r\n                }}>Upcoming</Button>\r\n                :\r\n                <Button className=\"mr-3\" onClick={(e) => {\r\n                  dispatch({ type: SET_SORT_BY, payload: \"on_the_air\" })\r\n                  dispatch({ type: SET_PAGE, payload: 1 })\r\n                }}>On The Air</Button>\r\n            }\r\n\r\n          </ButtonGroup>\r\n\r\n          <ButtonGroup size=\"sm\">\r\n            <Button\r\n              className=\"mr-1\"\r\n              onClick={(e) => dispatch({ type: SET_PAGE, payload: (page > 1 ? page - 1 : page) })}\r\n            >{\"<\"}</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 1 })}>1</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 2 })}>2</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 3 })}>3</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 4 })}>4</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 5 })}>5</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 6 })}>6</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 7 })}>7</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 8 })}>8</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 9 })}>9</Button>\r\n            <Button className=\"mr-1\" onClick={(e) => dispatch({ type: SET_PAGE, payload: 10 })}>10</Button>\r\n            <Button onClick={(e) =>\r\n              dispatch({ type: SET_PAGE, payload: (page < 10 ? page + 1 : page) })}\r\n            >{\">\"}</Button>\r\n          </ButtonGroup>\r\n        </ButtonToolbar>\r\n\r\n      Now Displaying: {medium}, Sorted By: {sortBy}, Page: {page}\r\n      </div>\r\n\r\n      <ul>\r\n        {state ? state.entertainment.map((item) => {\r\n          if (medium === \"movie\") {\r\n            return <MovieItem\r\n              {...item}\r\n              key={item.id}\r\n            />\r\n          } else {\r\n            return <TelevisionItem\r\n              {...item}\r\n              key={item.id}\r\n            />\r\n          }\r\n        }) : <div>Loading Entertainment...</div>}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EntertainmentList\r\n","export default __webpack_public_path__ + \"static/media/Unknown-Actor.1f84916a.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { getMovie, getMovieCredits, getMovieProviders } from \"../fetch requests/tmdbRequests\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport Navigation from \"../components/Navigation\"\r\nimport unknownUser from \"../assets/Unknown-Actor.png\"\r\nimport unknownPoster from \"../assets/Unknown-Poster.jpg\"\r\n\r\nconst MoviePage = (props) => {\r\n  const [movie, setMovie] = useState({});\r\n  const [crew, setCrew] = useState([]);\r\n  const [cast, setCast] = useState([]);\r\n  const [watchProviders, setWatchProviders] = useState({\r\n    streaming: undefined,\r\n    rent: undefined,\r\n    buy: undefined,\r\n    none: undefined\r\n  });\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  useEffect(() => {\r\n    getMovie(props.match.params.movieId).then((res) => setMovie(res));\r\n    getMovieProviders(props.match.params.movieId).then((res) => {\r\n      console.log(res.results.US);\r\n      if (res.results.US !== undefined) {\r\n        setWatchProviders({\r\n          stream: res.results.US.flatrate,\r\n          rent: res.results.US.rent,\r\n          buy: res.results.US.buy,\r\n          none: undefined,\r\n        });\r\n      } else {\r\n        setWatchProviders({\r\n          stream: undefined,\r\n          rent: undefined,\r\n          buy: undefined,\r\n          none: null\r\n        });\r\n      }\r\n    });\r\n\r\n    getMovieCredits(props.match.params.movieId).then((res) => {\r\n      setCrew(res.crew);\r\n      setCast(res.cast);\r\n    });\r\n  }, [props.match.params.movieId]);\r\n\r\n  return (\r\n    <>\r\n    <Navigation />\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h1>{movie.title}</h1>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <h3>{movie.tagline}</h3>\r\n            <p>{movie.overview}</p>\r\n          </Card.Text>\r\n          <Card>\r\n            <Card.Text>\r\n              {<h3>Watch Providers:</h3>}\r\n              <ul className=\"watch-providers\">\r\n                {watchProviders.stream && <h4>Streaming:</h4>}\r\n                {watchProviders.stream &&\r\n                  watchProviders.stream.map((provider) => {\r\n                    return (\r\n                      <li key={provider.provider_id}>\r\n                        {provider.provider_name}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                {watchProviders.rent && <h4>Rent:</h4>}\r\n                {watchProviders.rent &&\r\n                  watchProviders.rent.map((provider) => {\r\n                    return (\r\n                      <li key={provider.provider_id}>\r\n                        {provider.provider_name}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                {watchProviders.buy && <h4>Buy:</h4>}\r\n                {watchProviders.buy &&\r\n                  watchProviders.buy.map((provider) => {\r\n                    return (\r\n                      <li key={provider.provider_id}>\r\n                        {provider.provider_name}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                {watchProviders.none === null && (\r\n                  <div>\r\n                    There are no currently known watch providers. Please try\r\n                    again at a later date.\r\n                  </div>\r\n                )}\r\n              </ul>\r\n            </Card.Text>\r\n          </Card>\r\n          <Card>\r\n            <Card.Text>\r\n              <ul>\r\n                <h3>Executive Producers:</h3>\r\n                {crew.map((crew) => {\r\n                  if (crew.job === \"Executive Producer\") {\r\n                    return <li key={crew.id}>{crew.name}</li>;\r\n                  }\r\n                  return false;\r\n                })}\r\n                <h3>Director:</h3>\r\n                {crew.map((crew) => {\r\n                  if (crew.job === \"Director\") {\r\n                    return <h5 key={crew.id}>{crew.name}</h5>;\r\n                  }\r\n                  return false;\r\n                })}\r\n              </ul>\r\n            </Card.Text>\r\n          </Card>\r\n          <Button>Add {movie.title} to Favorites</Button>\r\n        </Card.Body>\r\n        {movie.poster_path !== null ? <img\r\n          src={movie.poster_path && baseUrl + movie.poster_path}\r\n          alt={`This is the theatrical poster for ${movie.original_title}`}\r\n        /> : <img\r\n          src={unknownPoster}\r\n          alt={`There is no known poster for ${movie.original_title}`}\r\n        />}\r\n      </Card>\r\n      <Card>\r\n        <h3>Cast:</h3>\r\n        {cast.map((cast) => {\r\n          if (cast.profile_path !== null) {\r\n            return (\r\n              <div style={{ width: \"120px\" }} key={cast.id}>\r\n                <img\r\n                  style={{ width: \"90px\" }}\r\n                  src={baseUrl + cast.profile_path}\r\n                  alt={`This is ${cast.name}`}\r\n                />\r\n                <p>{cast.name}</p>\r\n                <p>{cast.character}</p>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div key={cast.id}>\r\n                <img\r\n                  style={{ width: \"100px\" }}\r\n                  src={unknownUser}\r\n                  alt={`This is ${cast.name}`}\r\n                />\r\n                <p>{cast.name}</p>\r\n                <p>{cast.character}</p>\r\n              </div>\r\n            )\r\n          }\r\n        })}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getTelevision, getTelevisionCredits, getTelevisionProviders } from \"../fetch requests/tmdbRequests\";\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport Navigation from \"../components/Navigation\"\r\nimport unknownUser from \"../assets/Unknown-Actor.png\"\r\nimport unknownPoster from \"../assets/Unknown-Poster.jpg\"\r\n\r\nconst TelevisionPage = (props) => {\r\n  const [television, setTelevision] = useState({});\r\n  const [crew, setCrew] = useState([]);\r\n  const [cast, setCast] = useState([]);\r\n  const [watchProviders, setWatchProviders] = useState({\r\n    streaming: undefined,\r\n    rent: undefined,\r\n    buy: undefined,\r\n    none: undefined\r\n  })\r\n  const baseUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  useEffect(() => {\r\n    getTelevision(props.match.params.tvId).then((res) => setTelevision(res));\r\n\r\n    getTelevisionProviders(props.match.params.tvId).then((res) => {\r\n      if (res.results.US !== undefined) {\r\n        console.log(res)\r\n        setWatchProviders({\r\n          stream: res.results.US.flatrate,\r\n          rent: res.results.US.rent,\r\n          buy: res.results.US.buy,\r\n          none: undefined\r\n        })\r\n      }\r\n\r\n      else {\r\n        setWatchProviders({\r\n          stream: undefined,\r\n          rent: undefined,\r\n          buy: undefined,\r\n          none: null\r\n        })\r\n      }\r\n    });\r\n\r\n    getTelevisionCredits(props.match.params.tvId).then((res) => {\r\n      setCrew(res.crew)\r\n      setCast(res.cast)\r\n    })\r\n  }, [props.match.params.tvId]);\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h1>{television.name}</h1>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <h3>{television.tagline}</h3>\r\n            <p>{television.overview}</p>\r\n          </Card.Text>\r\n          <Card>\r\n            <Card.Text>\r\n              {<h3>Watch Providers:</h3>}\r\n              <ul className=\"watch-providers\">\r\n                {watchProviders.stream && <h4>Streaming:</h4>}\r\n                {watchProviders.stream &&\r\n                  watchProviders.stream.map((provider) => {\r\n                    return (\r\n                      <li key={provider.provider_id}>\r\n                        {provider.provider_name}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                {watchProviders.rent && <h4>Rent:</h4>}\r\n                {watchProviders.rent &&\r\n                  watchProviders.rent.map((provider) => {\r\n                    return (\r\n                      <li key={provider.provider_id}>\r\n                        {provider.provider_name}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                {watchProviders.buy && <h4>Buy:</h4>}\r\n                {watchProviders.buy &&\r\n                  watchProviders.buy.map((provider) => {\r\n                    return (\r\n                      <li key={provider.provider_id}>\r\n                        {provider.provider_name}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                {watchProviders.none === null && (\r\n                  <div>\r\n                    There are no currently known watch providers. Please try\r\n                    again at a later date.\r\n                  </div>\r\n                )}\r\n              </ul>\r\n            </Card.Text>\r\n          </Card>\r\n          <Card>\r\n            <Card.Text>\r\n              <ul>\r\n                {crew.some((member) => member.job === \"Executive Producer\") && <h3>Executive Producers:</h3>}\r\n                {crew.map((crew) => {\r\n                  if (crew.job === \"Executive Producer\") {\r\n                    return <li key={crew.id}>{crew.name}</li>;\r\n                  }\r\n                  return false;\r\n                })}\r\n              </ul>\r\n            </Card.Text>\r\n          </Card>\r\n          <Button>Add {television.name} to Favorites</Button>\r\n        </Card.Body>\r\n        {television.poster_path !== null ? <img\r\n          src={television.poster_path && baseUrl + television.poster_path}\r\n          alt={`This is the theatrical poster for ${television.original_title}`}\r\n        /> : <img\r\n          src={unknownPoster}\r\n          alt={`There is no known poster for ${television.original_title}`}\r\n        />}\r\n      </Card>\r\n      <Card>\r\n        <h3>Cast:</h3>\r\n        {cast.map((cast) => {\r\n          if (cast.profile_path !== null) {\r\n            return (\r\n              <div style={{ width: \"120px\" }} key={cast.id}>\r\n                <img\r\n                  style={{ width: \"90px\" }}\r\n                  src={baseUrl + cast.profile_path}\r\n                  alt={`This is ${cast.name}`}\r\n                />\r\n                <p style={{ display: \"wrap\" }}>{cast.name}</p>\r\n                <p>{cast.character}</p>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div key={cast.id}>\r\n                <img\r\n                  style={{ width: \"90px\" }}\r\n                  src={unknownUser}\r\n                  alt={`This is ${cast.name}`}\r\n                />\r\n                <p>{cast.name}</p>\r\n                <p>{cast.character}</p>\r\n              </div>\r\n            )\r\n          }\r\n        })}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TelevisionPage;","import React, { useState, useEffect } from 'react'\r\nimport { useStore, SET_ACTIVE_PAGE } from \"../store/store\"\r\nimport { Pagination } from \"react-bootstrap\"\r\nimport \"./PaginationComponent.css\"\r\n\r\nconst PaginationComponent = (props) => {\r\n  const [items, setItems] = useState([])\r\n  const activePage = useStore((state) => state.activePage)\r\n  const dispatch = useStore((state) => state.dispatch)\r\n  const page = useStore((state) => state.searchPage)\r\n  const searchQuery = useStore((state) => state.searchQuery)\r\n\r\n  \r\n  useEffect(() => {\r\n    const handleChangePage = (e, number) => {\r\n      props.apiCall(searchQuery, number).then((res) => {\r\n        dispatch({ type: props.setType, payload: res})\r\n      })\r\n    }\r\n  \r\n    const handleDecrementPage = (e) => {\r\n      if (page > 1) {\r\n        dispatch({ type: props.pageType, payload: page - 1})\r\n        dispatch ({ type: SET_ACTIVE_PAGE, payload: activePage - 1})\r\n        props.apiCall(searchQuery, page - 1).then((res) => {\r\n          dispatch({ type: props.setType, payload: res })\r\n        })\r\n      }\r\n    }\r\n    \r\n    const handleIncrementPage = (e) => {\r\n      if (page < props.pages) {\r\n        dispatch({ type: props.pageType, payload: page + 1})\r\n        dispatch({ type: SET_ACTIVE_PAGE, payload: activePage + 1 })\r\n        props.apiCall(searchQuery, page + 1).then((res) => {\r\n          dispatch({ type: props.setType, payload: res })\r\n        })\r\n      }\r\n    }\r\n    \r\n    let pagArray = [<Pagination.Prev key={0} onClick={(e) => handleDecrementPage()} />]\r\n    for (let number = 1; number <= props.pages; number++) {\r\n      pagArray.push(\r\n        <Pagination.Item key={number} active={number === activePage} onClick={(e) => {\r\n          dispatch({ type: props.pageType, payload: number })\r\n          handleChangePage(e, number)\r\n          dispatch({type: SET_ACTIVE_PAGE, payload: number})\r\n        }} >\r\n          {number}\r\n        </Pagination.Item>\r\n      )\r\n    }\r\n    \r\n    \r\n    pagArray.push(<Pagination.Next key={props.pages + 1} onClick={(e) => handleIncrementPage()} />)\r\n    setItems(pagArray)\r\n\r\n  }, [props, activePage, dispatch, page, searchQuery])\r\n\r\n  return (\r\n    <span className=\"pagination-parent\">\r\n      <Pagination size=\"sm\">\r\n        {items}\r\n      </Pagination>\r\n    </span>\r\n\r\n  )\r\n}\r\n\r\nexport default PaginationComponent\r\n","import React, { useState } from 'react'\r\nimport MovieItem from \"./MovieItem\"\r\nimport TelevisionItem from \"./TelevisionItem\"\r\nimport PaginationComponent from \"./PaginationComponent\"\r\nimport { multiSearch } from \"../fetch requests/tmdbRequests\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nimport { useStore, SET_SEARCH, SET_SEARCH_QUERY, SET_SEARCH_PAGE } from '../store/store'\r\n\r\nconst MultiSearch = () => {\r\n  const dispatch = useStore((state) => state.dispatch)\r\n  const entertainment = useStore((state) => state.search.results)\r\n  const totalPages = useStore((state) => state.search.total_pages)\r\n  const searchQuery = useStore((state) => state.searchQuery)\r\n  const searchPage = useStore((state) => state.searchPage)\r\n  const [query, setQuery] = useState(\"\")\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    multiSearch(query.trim(), searchPage).then((res) => {\r\n      if (res.total_pages > 0) {\r\n        dispatch({ type: SET_SEARCH, payload: res})\r\n        dispatch({ type: SET_SEARCH_QUERY, payload: query.trim()})\r\n        setQuery(\"\")\r\n      } else {\r\n        alert(\"Sorry, there were no results for that term. Please Try again.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Control onChange={handleChange} type=\"text\" value={query} placeholder=\"Enter your search term here\" />\r\n        <Button type=\"submit\">Search</Button>\r\n      </Form>\r\n      {searchQuery && <PaginationComponent pages={totalPages} setType={SET_SEARCH} pageType={SET_SEARCH_PAGE} apiCall={multiSearch}/>}\r\n      <ul>\r\n        {\r\n          entertainment ? entertainment.map((item) => {\r\n            if (item.media_type === \"movie\") {\r\n              return <MovieItem\r\n                {...item}\r\n                key={item.id}\r\n              />\r\n            } else {\r\n              return <TelevisionItem\r\n                {...item}\r\n                key={item.id}\r\n              />\r\n            }\r\n          }) : <div>Loading Entertainment...</div>\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultiSearch\r\n","import React from 'react'\r\nimport MultiSearch from \"../components/MultiSearch\"\r\nimport Navigation from \"../components/Navigation\"\r\n\r\nconst SearchPage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <MultiSearch />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchPage\r\n","import \"./App.css\";\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport Home from \"./views/Home\"\r\nimport EntertainmentList from \"./views/EntertainmentList\";\r\nimport MoviePage from \"./views/MoviePage\";\r\nimport TelevisionPage from \"./views/TelevisionPage\"\r\nimport SearchPage from \"./views/SearchPage\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        \r\n        <Route path=\"/browse\" component={EntertainmentList} />\r\n        \r\n        <Route path=\"/movie/:movieId\" render={(routeProps) => {\r\n          return <MoviePage {...routeProps} />\r\n        }}/>\r\n\r\n        <Route path=\"/tv/:tvId\" render={(routeProps) => {\r\n          return <TelevisionPage {...routeProps} />\r\n        }}/>\r\n\r\n        <Route path =\"/search\" component={SearchPage} />\r\n\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}